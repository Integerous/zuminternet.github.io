<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ZUM 기술 블로그</title>
    <description>생각을 읽다, ZUM, 고객의 생각을 읽고 담는 줌 인터넷 개발자들의 '좀 다른 개발 이야기'를 소개 합니다.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 16 Jun 2018 15:39:28 +0900</pubDate>
    <lastBuildDate>Sat, 16 Jun 2018 15:39:28 +0900</lastBuildDate>
    <generator>Jekyll v3.8.3</generator>
    
      <item>
        <title>[포털개발팀-이영우] 파일럿 프로젝트</title>
        <description>&lt;h1 id=&quot;소개&quot;&gt;소개&lt;/h1&gt; &lt;p&gt;안녕하세요! 포털개발팀 신입사원 이영우입니다. 이 글은 파일럿 프로젝트를 진행하면서 제가 느낀 점과 주어진 기술들을 어떤 식으로 적용했나에 대한 후기를 작성한 글입니다.&lt;/p&gt; &lt;h1 id=&quot;스프링을-만나다&quot;&gt;스프링을 만나다&lt;/h1&gt; &lt;h2 id=&quot;1-게시판&quot;&gt;1. 게시판&lt;/h2&gt; &lt;p&gt;1차 파일럿 프로젝트의 주제는 계층형 게시판 이었습니다.&lt;/p&gt; &lt;p&gt;계층형 게시판은 웹에 관심이 있다면 한 번쯤은 만들어봤을 가장 심플한 주제가 아닐까 싶습니다&lt;/p&gt; &lt;p&gt;하지만 스펙은 아래와 같았습니다..&lt;/p&gt; &lt;p&gt;필수 스펙 -Java8 -Intellij -Spring 4.0 MVC -Spring Security -ORM(Hibernate, JPA 등) -Git -MySQL -Log4j -Springboot -Gradle -jQuery&lt;/p&gt; &lt;p&gt;선택 스펙 -Freemarker -Ajax -JUnit -Node.js -Backbone.js -BootStrap -빌드 시스템(grunt) -다양한 Spring Annotation -다양한 Design Pattern -다양한 opensource, framework&lt;/p&gt; &lt;p&gt;이게 다 뭘까요??&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/images/portal/post/2017-10-27-ZUM-Pilot-youngwoo/cantspeak.jpg&quot; alt=&quot;말잇못&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;1차 코드리뷰까지 단...</description>
        <pubDate>Fri, 27 Oct 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ZUM-Pilot-youngwoo/</link>
        <guid isPermaLink="true">http://localhost:4000/ZUM-Pilot-youngwoo/</guid>
        
        <category>spring</category>
        
        <category>boot</category>
        
        <category>pilot</category>
        
        <category>신입</category>
        
        <category>zum</category>
        
        
        <category>portal/pilot</category>
        
      </item>
    
      <item>
        <title>SPRING CLOUD STREAM, MQ 도입 사례 -2</title>
        <description>&lt;p&gt;지난 번 글에 이어서 실제 연동 과정 입니다.&lt;/p&gt; &lt;p&gt;전체 글의 목차입니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;도입 배경&lt;/li&gt; &lt;li&gt;관련 연구&lt;/li&gt; &lt;li&gt;RabbitMQ 따라잡기&lt;/li&gt; &lt;li&gt;Spring Cloud Stream , RabbitMQ 연동하기&lt;/li&gt; &lt;li&gt;추가 작업&lt;/li&gt; &lt;li&gt;정리&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;지난 글에는 도입배경, 관련연구, RabbitMQ에 대해서 설명하였습니다.&lt;br /&gt; &lt;a href=&quot;https://zumdev.github.io/spring_cloud_stream_rabbitmq_01/&quot;&gt;SPRING CLOUD STREAM, MQ 도입 사례 - 1.기본개념&lt;/a&gt;&lt;/p&gt; &lt;p&gt;이번 글에서는 Spring Cloud Stream, Rabbit 연동하기 및 추가 작업에 대해서 공유합니다.&lt;/p&gt; &lt;h1 id=&quot;4-rabbitmq-연동하기&quot;&gt;4. RabbitMQ 연동하기&lt;/h1&gt; &lt;p&gt;자바+스프링 웹서비스 환경에서 RabbitMQ 연동을 할수 있는 방법에 대해서 소개합니다. 참고로 Consumer(=Subcribe) 입장에서만 정리하였습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;RabbitMQ Java client library(com.rabbitmq.client)&lt;/li&gt; &lt;li&gt;Spring Framework RabbitMQ&lt;/li&gt; &lt;li&gt;Spring Cloud Stream RabbitMQ binder 1.0.3&lt;/li&gt; &lt;li&gt;Spring Cloud Stream RabbitMQ binder 1.2.0&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;41-rabbitmq-java-client-library&quot;&gt;4.1 RabbitMQ Java...</description>
        <pubDate>Wed, 12 Jul 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/spring_cloud_stream_rabbitmq_02/</link>
        <guid isPermaLink="true">http://localhost:4000/spring_cloud_stream_rabbitmq_02/</guid>
        
        <category>spring</category>
        
        <category>cloud</category>
        
        <category>rabbitmq</category>
        
        <category>microservices</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>SPRING CLOUD STREAM, MQ 도입 사례 - 1</title>
        <description>&lt;p&gt;SPRING CLOUD STREAM, MQ(Message Queuing) 도입 사례를 공유합니다. 좋은 의견 있으시면 꼭 말씀 부탁드리겠습니다.&lt;/p&gt; &lt;p&gt;글의 목차입니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;도입 배경&lt;/li&gt; &lt;li&gt;관련 연구&lt;/li&gt; &lt;li&gt;RabbitMQ 따라잡기&lt;/li&gt; &lt;li&gt;Spring Cloud Stream , RabbitMQ 연동하기&lt;/li&gt; &lt;li&gt;추가 작업&lt;/li&gt; &lt;li&gt;정리&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;다소 불친절한 설명이 포함되어 있습니다. 상세 내용에 대해서 모두 작성하기에는 무리가 있었습니다. 관련 기술들은 레퍼런스를 통해서 확인부탁드립니다.&lt;/p&gt; &lt;p&gt;사내 서비스이기 때문에 공개하기 어려운 내용들은 비공개 처리하였습니다. 아키텍처는 외부에 공유해도 되겠다는 판단으로 공유합니다. 혹시라도 공유되면 안되는 내용 있으면 반드시 말씀 부탁드립니다.&lt;/p&gt; &lt;p&gt;그리고 현재 서비스 적용 전입니다. 피드백 주시면 배포 전에 개선을 할 수 있을 것 같습니다. 부디~ 피드백!ㅠㅠ 도와주세요&lt;/p&gt; &lt;h1 id=&quot;1도입-배경&quot;&gt;1.도입 배경&lt;/h1&gt; &lt;p&gt;줌닷컴 메인(zum.com)에 노출되고 있는 뉴스기사 배포 시스템을...</description>
        <pubDate>Tue, 11 Jul 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/spring_cloud_stream_rabbitmq_01/</link>
        <guid isPermaLink="true">http://localhost:4000/spring_cloud_stream_rabbitmq_01/</guid>
        
        <category>spring</category>
        
        <category>cloud</category>
        
        <category>rabbitmq</category>
        
        <category>microservices</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>Spring Boot &amp; OAuth2 기반 소셜 댓글 시스템 개발하기</title>
        <description>&lt;p&gt;회사에서의 잉여력 + 개인의 잉여력을 가지고 회사에도 도움 + 개인적인 공부에도 도움이 되는 프로젝트를 진행해 보고 싶었습니다.&lt;br /&gt; 제가 맡고 있는 서비스에 아쉬운점이 소셜 댓글이 없다는 것인데(ㅠ.ㅠ) 아쉬움도 달래고 공부도 하고 제 서비스에 댓글기능도 붙일겸 직접 소셜 인증(페이스북, 구글, 트위터, 카카오) &amp;amp; 간단한 댓글 Getting Started를 개발하기로 야심찬 계획(?)을 세웠습니다.&lt;br /&gt; &lt;strong&gt;모든 소스는 &lt;a href=&quot;https://github.com/young891221/spring-boot-social-comment&quot;&gt;github&lt;/a&gt;에 있습니다.&lt;/strong&gt;&lt;/p&gt; &lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;목표는 페이스북, 구글, 트위터, 카카오 등 국내에서 많이 쓰이는 서비스들의 OAuth인증을 통한 댓글 시스템 구현하기!&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt; 여기서 트위터를 제외한 다른 인증은 모두 OAuth2를 사용합니다. Spring에는 이를 구현한 고마운 라이브러리인 Spring Social과 &lt;strong&gt;Spring Security OAuth2&lt;/strong&gt;가 있습니다. 전자의 경우 마지막 업데이트가 2년전이고 정해진...</description>
        <pubDate>Tue, 04 Jul 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/OAuth2-Social/</link>
        <guid isPermaLink="true">http://localhost:4000/OAuth2-Social/</guid>
        
        <category>Spring Boot</category>
        
        <category>OAuth2</category>
        
        <category>Social</category>
        
        <category>Comment</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>Spring Nexus 3.X - Maven, NPM 저장소로 이용하기</title>
        <description>&lt;p&gt;&lt;strong&gt;대부분의 Nexus 관련 글이 2.x.x 버전을 기준으로 작성되어 있어 3.x.x 기준으로 간단히 정리를 해보려고 합니다.&lt;/strong&gt;&lt;/p&gt; &lt;h2 id=&quot;nexus란&quot;&gt;Nexus란?&lt;/h2&gt; &lt;p&gt;&lt;img src=&quot;/images/portal/post/2017-07-04-NEXUS-3XX-MAVEN-NPM/nexus.png&quot; alt=&quot;nexus&quot; /&gt;&lt;/p&gt; &lt;p&gt;Nexus는 Sonatype 에서 만든 저장소 관리자 프로젝트로, 다양한 Format 의 사설 저장소를 만들 수 있으며 메인 저장소를 Cache할 수 있는 기능 또한 제공하여 저장소를 관리할 수 있도록 도와주는 관리자 도구입니다. Maven 에서 사용할 수 있는 가장 널리 사용되는 무료 저장소로 잘 알려져있습니다.&lt;/p&gt; &lt;h3 id=&quot;사설-저장소가-필요한-이유&quot;&gt;사설 저장소가 필요한 이유&lt;/h3&gt; &lt;p&gt;&lt;a href=&quot;https://gs.saro.me/#!m=elec&amp;amp;jn=774&quot;&gt;가리사니-사설 Repository Nexus 설치 / 연동&lt;/a&gt; 에 박용서님이 작성해주신 글에 잘 설명되어있습니다.&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/images/portal/post/2017-07-04-NEXUS-3XX-MAVEN-NPM/why.png&quot; alt=&quot;why&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;(출처 : &lt;a href=&quot;https://gs.saro.me/#!m=elec&amp;amp;jn=774&quot;&gt;가리사니-사설 Repository Nexus 설치 / 연동&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;몇 가지 추가하자면,&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;개발팀에서 사용하는...</description>
        <pubDate>Tue, 04 Jul 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/NEXUS-3XX-MAVEN-NPM/</link>
        <guid isPermaLink="true">http://localhost:4000/NEXUS-3XX-MAVEN-NPM/</guid>
        
        <category>ci</category>
        
        <category>repository</category>
        
        <category>maven</category>
        
        <category>npm</category>
        
        <category>gradle</category>
        
        <category>nexus</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>포털개발팀 1년 회고 및 팀문화에 대해서</title>
        <description>&lt;p&gt;작년 7월 조직개편 때 포털개발팀이 신설되고 정확히 1년이라는 시간이 지났습니다. 포털개발팀의 지난 1년을 돌이켜보고, 팀문화에 대해서 공유합니다.&lt;/p&gt; &lt;h1 id=&quot;티타임&quot;&gt;티타임&lt;/h1&gt; &lt;h4 id=&quot;티타임-그리고-지난-1년에-대한-회고&quot;&gt;티타임 그리고, 지난 1년에 대한 회고&lt;/h4&gt; &lt;p&gt;글을 시작하기 전에 간략하게 포털개발팀 지난 1년 동안 수행한 업무를 간단하게 회고해봤습니다.&lt;/p&gt; &lt;p&gt;포털개발팀에서는 지난 1년 동안 줌닷컴 메인(=zum.com=시작페이지=줌프론트), 모바일웹, 허브줌, 타임트리 등 포털서비스를 신규 개발/운영 하였습니다. 최근에는 신규 포털서비스 오픈을 위해 열심히 준비 중입니다. 포털서비스 외에 광고, 메일/SMS, 공용인프라 같은 기반서비스 플랫폼 및 고객센터 관리페이지, 이벤트 페이지, 줌인터넷 홈페이지 등 전사 지원 업무도 함께 수행하였습니다.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;포털개발팀은 포털서비스, 기반서비스 플랫폼, 전사지원업무 등 다양한 업무를 맡아서 수행하는 웹서비스 개발팀 입니다.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;지난 4월6일 목요일 오전...</description>
        <pubDate>Sun, 02 Jul 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/portaldevteam2017/</link>
        <guid isPermaLink="true">http://localhost:4000/portaldevteam2017/</guid>
        
        <category>개발자</category>
        
        <category>zum</category>
        
        <category>agile</category>
        
        
        <category>portal/etc</category>
        
      </item>
    
      <item>
        <title>jOOQ !! (Java Object Oriented Querying)</title>
        <description>&lt;p&gt;사내에서 Query Repository로 사용하게 된 &lt;code class=&quot;highlighter-rouge&quot;&gt;jOOQ&lt;/code&gt; 를 간단하게 정리해보겠습니다.&lt;/p&gt; &lt;h2 id=&quot;jooq가-뭐지&quot;&gt;jOOQ가 뭐지?&lt;/h2&gt; &lt;p&gt;&lt;img src=&quot;/images/portal/post/2017-06-25-JOOQ/icon.png&quot; alt=&quot;JOOQ&quot; /&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Java Object Oriented Querying&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jOOQ&lt;/code&gt;는 자바 코드로 쿼리를 작성할 수 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;데이터베이스 인터페이스&lt;/code&gt; 입니다.&lt;/p&gt; &lt;p&gt;데이터베이스 스키마에서 생성 된 클래스의 쿼리를 작성하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;내부 도메인 특정 언어&lt;/code&gt;를 제공하며 &lt;code class=&quot;highlighter-rouge&quot;&gt;내부 도메인 특정 언어&lt;/code&gt;로 SQL을 구현하므로 임의의 복잡성을 지닌 SQL문을 형식에 맞게 구성하고 실행할 수 있습니다.&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;내가-생각하는-jooq&quot;&gt;내가 생각하는 jOOQ&lt;/h2&gt; &lt;p&gt;단점도 분명 있겠지만, 조금이나마 사용해본 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;jOOQ&lt;/code&gt;가 좋다고 느낀 이유는 아래와 같습니다.&lt;/p&gt; &lt;h4 id=&quot;쿼리를-자바로-짤-수-있다-&quot;&gt;쿼리를 자바로 짤 수 있다 !&lt;/h4&gt; &lt;p&gt;Spring Boot를 사용하면서도 자바 기반의 Config가 정말 좋았습니다. QueryDSL을 접했을 때도...</description>
        <pubDate>Sun, 25 Jun 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/JOOQ/</link>
        <guid isPermaLink="true">http://localhost:4000/JOOQ/</guid>
        
        <category>sql</category>
        
        <category>database</category>
        
        <category>springboot</category>
        
        <category>spring</category>
        
        <category>jooq</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>젠킨스 사용하여 자동 배포환경 만들기!</title>
        <description>&lt;h2 id=&quot;젠킨스-사용하여-자동-배포환경-만들기&quot;&gt;젠킨스 사용하여 자동 배포환경 만들기!&lt;/h2&gt; &lt;p&gt;(Git으로 형상관리가 되고 있는 Gradle 프로젝트를 기준으로 이 글이 작성되었습니다.)&lt;/p&gt; &lt;p&gt;개발환경과 어플리케이션 서버가 분리되어 있고, 여러 원격 서버를 가지고 있는 구성에서 어플리케이션을 배포하기는 굉장히 까다롭습니다.&lt;/p&gt; &lt;h2 id=&quot;현재-상황&quot;&gt;현재 상황&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Gitlab으로 형상관리&lt;/li&gt; &lt;li&gt;작업망과 개발망 분리(대략 개발하는 PC에서부터 각 어플리케이션 서버까지 3~4 Depth로 망 분리)&lt;/li&gt; &lt;li&gt;Spring Framework&lt;/li&gt; &lt;li&gt;Gradle or Maven Project&lt;/li&gt; &lt;/ul&gt; &lt;h2 id=&quot;구시대적-배포&quot;&gt;구시대적 배포(?)!&lt;/h2&gt; &lt;p&gt;제가 겪어본 환경 기준으로 원시적인 배포 방법을 먼저 살펴보겠습니다. (자세한 git flow나 서버 환경은 생략)&lt;/p&gt; &lt;ol&gt; &lt;li&gt;수정된 사항을 Git에 feature 브랜치에 &lt;strong&gt;Push&lt;/strong&gt; 합니다.&lt;/li&gt; &lt;li&gt;로컬 환경에서 프로젝트를 &lt;strong&gt;빌드&lt;/strong&gt; 합니다.&lt;/li&gt; &lt;li&gt;빌드 완료된 추출물(jar 또는 war)를 테스트 서버로 &lt;strong&gt;전송&lt;/strong&gt; 합니다.&lt;/li&gt; &lt;li&gt;배포 스크립트를 통해 &lt;strong&gt;배포&lt;/strong&gt;...</description>
        <pubDate>Wed, 10 May 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/JENKINS-BUILD/</link>
        <guid isPermaLink="true">http://localhost:4000/JENKINS-BUILD/</guid>
        
        <category>jenkins</category>
        
        <category>ci</category>
        
        <category>deploy</category>
        
        <category>gradle</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>실서비스에서 CoffeeScript를 ES6로 변환하기</title>
        <description>&lt;p align=&quot;center&quot;&gt; &lt;img src=&quot;/images/portal/post/2017-03-22-Coffee-ES6/coffee.png&quot; /&gt; &lt;/p&gt; &lt;p&gt;안녕하세요? 포털개발팀 담당 김영재입니다. 사내의 모바일웹 프로젝트의 프론트 환경이 CoffeeScript로 개발되어 있어 여러가지 불편을 겪었습니다. 이는 오랫동안 풀어야 할 숙원사업(?)이였는데 이를 해결하며 느꼈던 점, 절차, 노하우를 공유하고자 합니다. 제가 느꼈던 CoffeeScript 환경의 문제와 Webpack + ES6 도입 이유를 정리해 보았습니다.&lt;/p&gt; &lt;h3 id=&quot;coffeescript-개발환경-문제&quot;&gt;CoffeeScript 개발환경 문제&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;전역객체 사용의 남발(CoffeeScript와는 무관합니다)&lt;/li&gt; &lt;li&gt;기존 코드가 모듈화 되어 있지 않았습니다.(CoffeeScript와는 무관합니다)&lt;/li&gt; &lt;li&gt;그래서 의존 관계 파악이 어려웠고 유지보수, 기능 개발에 제한이 있었습니다.&lt;/li&gt; &lt;li&gt;개발 진행중 수정된 사항을 즉시 변환해 주는 컨버팅 도구(Webpack, browsify)를 쓰고 있지 않아 개발진행이 느렸습니다.&lt;/li&gt; &lt;li&gt;CoffeeScript의 장점이 있지만 러닝커브가 존재하였습니다. 그런데 학습비용을 쓰기에는…&lt;/li&gt; &lt;li&gt;그래서 이 프로젝트를 맡게되는 사람마다...</description>
        <pubDate>Wed, 22 Mar 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/Coffee-ES6/</link>
        <guid isPermaLink="true">http://localhost:4000/Coffee-ES6/</guid>
        
        <category>CoffeeScript</category>
        
        <category>ES6</category>
        
        <category>decaffeinate</category>
        
        <category>Webpack</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>[포털개발팀-조정훈] 파일럿 프로젝트</title>
        <description>&lt;h1 id=&quot;소개&quot;&gt;소개&lt;/h1&gt; &lt;p&gt;안녕하세요! 포털개발팀 신입사원 조정훈입니다. 이 글은 파일럿 프로젝트를 진행하면서 제가 느낀점?(&lt;strong&gt;부족한 점..&lt;/strong&gt;)과 후기를 작성한 글입니다.&lt;/p&gt; &lt;h1 id=&quot;스프링을-맛보다&quot;&gt;스프링을 맛보다&lt;/h1&gt; &lt;h2 id=&quot;1-게시판&quot;&gt;1. 게시판&lt;/h2&gt; &lt;p&gt;파일럿 프로젝트를 시작하면 A4용지가 한 장 주어집니다. 주어진 내용은 바로&lt;/p&gt; &lt;p&gt;필수 스펙 -Java8 -STS(intellij) -Spring 4.0 MVC -Spring Security -ORM(Hibernate 등) -Git -MySQL -Log4j -Springboot -Gradle -jQuery&lt;/p&gt; &lt;p&gt;선택 스펙 -Freemarker -Ajax -JUnit -Node.js -Backbone.js -BootStrap -빌드 시스템(grunt) -다양한 Spring Annotation -다양한 Design Pattern -다양한 opensource, framework&lt;/p&gt; &lt;p&gt;Spring framework를 처음 접해보는 저는 바로 멘붕에 빠져버렸습니다.. &lt;img src=&quot;/images/portal/post/2017-02-24-ZUM-Pilot-jeonghoon/IMG_1521.JPG&quot; alt=&quot;변명은 지옥에서 듣지&quot; /&gt;&lt;/p&gt; &lt;p&gt;여러가지 선택 스펙이 있었지만, Freemarker가 궁금하여 찾아보았는데 servlet에서 제공하는 데이터들을 이용하여 HTML을 동적으로 생성하는 템플릿 엔진이었습니다. 하지만...</description>
        <pubDate>Fri, 24 Feb 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ZUM-Pilot-jeonghoon/</link>
        <guid isPermaLink="true">http://localhost:4000/ZUM-Pilot-jeonghoon/</guid>
        
        <category>spring</category>
        
        <category>boot</category>
        
        <category>pilot</category>
        
        <category>신입</category>
        
        <category>zum</category>
        
        <category>줌인터넷</category>
        
        
        <category>portal/pilot</category>
        
      </item>
    
      <item>
        <title>버그 트래킹 일지(5) - 대망의 적용 배포 그리고 결론</title>
        <description>&lt;p&gt;주니어개발자의 버그 트래킹 일지입니다!&lt;/p&gt; &lt;p&gt;주 내용은 웹 서비스의 세션을 Membase(현재의 Couchbase)로 관리하면서 발생한 이슈입니다. 이슈를 해결해 나가는 과정을 기록으로 남깁니다.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://localhost:4000/BUG-TRACKING-1&quot;&gt;버그 트래킹 일지(1) - 시작은 사전지식 확보부터&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;http://localhost:4000/BUG-TRACKING-2&quot;&gt;버그 트래킹 일지(2) - 로그를 보자!&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;http://localhost:4000/BUG-TRACKING-3&quot;&gt;버그 트래킹 일지(3) - 임시방편보단 장기적으로&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;http://localhost:4000/BUG-TRACKING-4&quot;&gt;버그 트래킹 일지(4) - 의심하고 또 의심하자&lt;/a&gt;&lt;br /&gt; &lt;strong&gt;버그 트래킹 일지(5) - 대망의 적용 배포 그리고 결론&lt;/strong&gt;&lt;/p&gt; &lt;h3 id=&quot;버그트래킹-환경&quot;&gt;버그트래킹 환경&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Membase Server&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Version : 1.7.2&lt;/li&gt; &lt;li&gt; &lt;p&gt;Node&lt;/p&gt; &lt;ul&gt; &lt;li&gt;4개&lt;/li&gt; &lt;li&gt;노드당 Replica 2개&lt;/li&gt; &lt;li&gt;노드당 할당 메모리 2GB&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Bucket&lt;/p&gt; &lt;ul&gt; &lt;li&gt;1개&lt;/li&gt; &lt;li&gt;메모리 8GB(노드당 메모리 * 노드 수)&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;...</description>
        <pubDate>Wed, 22 Feb 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/BUG-TRACKING-5/</link>
        <guid isPermaLink="true">http://localhost:4000/BUG-TRACKING-5/</guid>
        
        <category>membase</category>
        
        <category>bugtracking</category>
        
        <category>resource</category>
        
        <category>io</category>
        
        <category>nosql</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>버그 트래킹 일지(4) - 의심하고 또 의심하자</title>
        <description>&lt;p&gt;주니어개발자의 버그 트래킹 일지입니다!&lt;/p&gt; &lt;p&gt;주 내용은 웹 서비스의 세션을 Membase(현재의 Couchbase)로 관리하면서 발생한 이슈입니다. 이슈를 해결해 나가는 과정을 기록으로 남깁니다.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://localhost:4000/BUG-TRACKING-1&quot;&gt;버그 트래킹 일지(1) - 시작은 사전지식 확보부터&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://zumdev.github.io/BUG-TRACKING-2&quot;&gt;버그 트래킹 일지(2) - 로그를 보자!&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://zumdev.github.io/BUG-TRACKING-3&quot;&gt;버그 트래킹 일지(3) - 임시방편보단 장기적으로&lt;/a&gt;&lt;br /&gt; &lt;strong&gt;버그 트래킹 일지(4) - 의심하고 또 의심하자&lt;/strong&gt; &lt;br /&gt; &lt;a href=&quot;http://localhost:4000/BUG-TRACKING-5&quot;&gt;버그 트래킹 일지(5) - 대망의 적용 배포 그리고 결론&lt;/a&gt;&lt;/p&gt; &lt;h3 id=&quot;버그트래킹-환경&quot;&gt;버그트래킹 환경&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Membase Server&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Version : 1.7.2&lt;/li&gt; &lt;li&gt; &lt;p&gt;Node&lt;/p&gt; &lt;ul&gt; &lt;li&gt;4개&lt;/li&gt; &lt;li&gt;노드당 Replica 2개&lt;/li&gt; &lt;li&gt;노드당 할당 메모리 2GB&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Bucket&lt;/p&gt; &lt;ul&gt; &lt;li&gt;1개&lt;/li&gt; &lt;li&gt;메모리 8GB(노드당 메모리 * 노드 수)&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt;...</description>
        <pubDate>Wed, 22 Feb 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/BUG-TRACKING-4/</link>
        <guid isPermaLink="true">http://localhost:4000/BUG-TRACKING-4/</guid>
        
        <category>membase</category>
        
        <category>bugtracking</category>
        
        <category>resource</category>
        
        <category>io</category>
        
        <category>nosql</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>버그 트래킹 일지(3) - 임시방편보단 장기적으로</title>
        <description>&lt;p&gt;주니어개발자의 버그 트래킹 일지입니다!&lt;/p&gt; &lt;p&gt;주 내용은 웹 서비스의 세션을 Membase(현재의 Couchbase)로 관리하면서 발생한 이슈입니다. 이슈를 해결해 나가는 과정을 기록으로 남깁니다.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://localhost:4000/BUG-TRACKING-1&quot;&gt;버그 트래킹 일지(1) - 시작은 사전지식 확보부터&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;https://zumdev.github.io/BUG-TRACKING-2&quot;&gt;버그 트래킹 일지(2) - 로그를 보자!&lt;/a&gt;&lt;br /&gt; &lt;strong&gt;버그 트래킹 일지(3) - 임시방편보단 장기적으로&lt;/strong&gt; &lt;br /&gt; &lt;a href=&quot;http://localhost:4000/BUG-TRACKING-4&quot;&gt;버그 트래킹 일지(4) - 의심하고 또 의심하자&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;http://localhost:4000/BUG-TRACKING-5&quot;&gt;버그 트래킹 일지(5) - 대망의 적용 배포 그리고 결론&lt;/a&gt;&lt;/p&gt; &lt;h3 id=&quot;버그트래킹-환경&quot;&gt;버그트래킹 환경&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Membase Server&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Version : 1.7.2&lt;/li&gt; &lt;li&gt; &lt;p&gt;Node&lt;/p&gt; &lt;ul&gt; &lt;li&gt;4개&lt;/li&gt; &lt;li&gt;노드당 Replica 2개&lt;/li&gt; &lt;li&gt;노드당 할당 메모리 2GB&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Bucket&lt;/p&gt; &lt;ul&gt; &lt;li&gt;1개&lt;/li&gt; &lt;li&gt;메모리 8GB(노드당 메모리 * 노드 수)&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt;...</description>
        <pubDate>Wed, 22 Feb 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/BUG-TRACKING-3/</link>
        <guid isPermaLink="true">http://localhost:4000/BUG-TRACKING-3/</guid>
        
        <category>membase</category>
        
        <category>bugtracking</category>
        
        <category>resource</category>
        
        <category>io</category>
        
        <category>nosql</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>버그 트래킹 일지(2) - 로그를 보자!</title>
        <description>&lt;p&gt;주니어개발자의 버그 트래킹 일지입니다!&lt;/p&gt; &lt;p&gt;주 내용은 웹 서비스의 세션을 Membase(현재의 Couchbase)로 관리하면서 발생한 이슈입니다. 이슈를 해결해 나가는 과정을 기록으로 남깁니다.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://localhost:4000/BUG-TRACKING-1&quot;&gt;버그 트래킹 일지(1) - 시작은 사전지식 확보부터&lt;/a&gt;&lt;br /&gt; &lt;strong&gt;버그 트래킹 일지(2) - 로그를 보자!&lt;/strong&gt; &lt;br /&gt; &lt;a href=&quot;http://localhost:4000/BUG-TRACKING-3&quot;&gt;버그 트래킹 일지(3) - 임시방편보단 장기적으로&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;http://localhost:4000/BUG-TRACKING-4&quot;&gt;버그 트래킹 일지(4) - 의심하고 또 의심하자&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;http://localhost:4000/BUG-TRACKING-5&quot;&gt;버그 트래킹 일지(5) - 대망의 적용 배포 그리고 결론&lt;/a&gt;&lt;/p&gt; &lt;h3 id=&quot;버그트래킹-환경&quot;&gt;버그트래킹 환경&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Membase Server&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Version : 1.7.2&lt;/li&gt; &lt;li&gt; &lt;p&gt;Node&lt;/p&gt; &lt;ul&gt; &lt;li&gt;4개&lt;/li&gt; &lt;li&gt;노드당 Replica 2개&lt;/li&gt; &lt;li&gt;노드당 할당 메모리 2GB&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Bucket&lt;/p&gt; &lt;ul&gt; &lt;li&gt;1개&lt;/li&gt; &lt;li&gt;메모리 8GB(노드당 메모리 * 노드 수)&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt;...</description>
        <pubDate>Wed, 22 Feb 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/BUG-TRACKING-2/</link>
        <guid isPermaLink="true">http://localhost:4000/BUG-TRACKING-2/</guid>
        
        <category>membase</category>
        
        <category>bugtracking</category>
        
        <category>resource</category>
        
        <category>io</category>
        
        <category>nosql</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>버그 트래킹 일지(1) - 시작은 사전지식 확보부터</title>
        <description>&lt;p&gt;주니어개발자의 버그 트래킹 일지입니다!&lt;/p&gt; &lt;p&gt;주 내용은 웹 서비스의 세션을 Membase(현재의 Couchbase)로 관리하면서 발생한 이슈입니다. 이슈를 해결해 나가는 과정을 기록으로 남깁니다.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;버그 트래킹 일지(1) - 시작은 사전지식 확보부터&lt;/strong&gt; &lt;br /&gt; &lt;a href=&quot;http://localhost:4000/BUG-TRACKING-2&quot;&gt;버그 트래킹 일지(2) - 로그를 보자!&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;http://localhost:4000/BUG-TRACKING-3&quot;&gt;버그 트래킹 일지(3) - 임시방편보단 장기적으로&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;http://localhost:4000/BUG-TRACKING-4&quot;&gt;버그 트래킹 일지(4) - 의심하고 또 의심하자&lt;/a&gt;&lt;br /&gt; &lt;a href=&quot;http://localhost:4000/BUG-TRACKING-5&quot;&gt;버그 트래킹 일지(5) - 대망의 적용 배포 그리고 결론&lt;/a&gt;&lt;/p&gt; &lt;h3 id=&quot;버그트래킹-환경&quot;&gt;버그트래킹 환경&lt;/h3&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Membase Server&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Version : 1.7.2&lt;/li&gt; &lt;li&gt; &lt;p&gt;Node&lt;/p&gt; &lt;ul&gt; &lt;li&gt;4개&lt;/li&gt; &lt;li&gt;노드당 Replica 2개&lt;/li&gt; &lt;li&gt;노드당 할당 메모리 2GB&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Bucket&lt;/p&gt; &lt;ul&gt; &lt;li&gt;1개&lt;/li&gt; &lt;li&gt;메모리 8GB(노드당 메모리 * 노드 수)&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt;...</description>
        <pubDate>Wed, 22 Feb 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/BUG-TRACKING-1/</link>
        <guid isPermaLink="true">http://localhost:4000/BUG-TRACKING-1/</guid>
        
        <category>membase</category>
        
        <category>bugtracking</category>
        
        <category>resource</category>
        
        <category>io</category>
        
        <category>nosql</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>[포털개발팀-류광현] 파일럿 프로젝트</title>
        <description>&lt;h1 id=&quot;글-소개--인사글&quot;&gt;글 소개 &amp;amp; 인사글&lt;/h1&gt; &lt;p&gt;안녕하세요? 저는 줌인터넷 포털개발팀에 입사한 신입사원 류광현 입니다. 이 글은 제가 수습기간동안 프로젝트를 진행하며, 느꼈던 점과 프로젝트의 진행 과정에 대한 내용을 중심으로 작성하였습니다.&lt;/p&gt; &lt;p&gt;부족한 점이 매우 많을 거라고 생각합니다. 내용은 심각하지 않으니..가벼운 마음으로 읽어 주시면 감사하겠습니다. :-) &lt;br /&gt;&lt;br /&gt;&lt;/p&gt; &lt;h1 id=&quot;3개월의-수습기간-동안-진행한-프로젝트&quot;&gt;3개월의 수습기간 동안 진행한 프로젝트&lt;/h1&gt; &lt;p&gt;개발을 시작함과 동시에 점점 시간이 빛과 같은 속도로 흘러감을 느끼게 되었…하….. &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; &lt;h2 id=&quot;1-계층형-댓글을-구현한-간단한-게시판-만들기웹-개발자에겐-누워서-떡먹기-아아닌데&quot;&gt;1. 계층형 댓글을 구현한 간단한 게시판 만들기&lt;br /&gt;(&lt;code class=&quot;highlighter-rouge&quot;&gt;웹 개발자에겐 누워서 떡먹기?? 아..아닌데..&lt;/code&gt;)&lt;/h2&gt; &lt;p&gt;게시판을 만들기위해 필요한 조건을 PPT로 만들어 주셨고, 필수 스펙은 다음과 같았습니다.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Java8&lt;/li&gt; &lt;li&gt;STS (intellij)&lt;/li&gt; &lt;li&gt;Spring 4.0 MVC&lt;/li&gt; &lt;li&gt;Spring Security&lt;/li&gt;...</description>
        <pubDate>Fri, 06 Jan 2017 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ZUM-Pilot-ryudung/</link>
        <guid isPermaLink="true">http://localhost:4000/ZUM-Pilot-ryudung/</guid>
        
        <category>spring</category>
        
        <category>boot</category>
        
        <category>pilot</category>
        
        <category>zum</category>
        
        <category>zuminternet</category>
        
        <category>줌인터넷</category>
        
        <category>포털개발</category>
        
        <category>신입</category>
        
        
        <category>portal/pilot</category>
        
      </item>
    
      <item>
        <title>zum.com 운영 중 발생한 Nginx Cache 트러블슈팅 사례</title>
        <description>&lt;p&gt;안녕하세요? &lt;br /&gt; 저는 &lt;a href=&quot;http://zum.com/&quot;&gt;zum.com&lt;/a&gt;의 메인페이지 운영 및 개발을 담당하는 포털개발팀의 이동욱입니다. &lt;br /&gt; 이번 시간에는 제가 최근에 zum.com을 운영하면서 실수했었던 내용들 중, Nginx에 관련된 내용들을 정리하였습니다. &lt;br /&gt; (Nginx외에도 정말 많은 실수를 했지만 이번엔 Nginx만 하였습니다^^;) &lt;br /&gt;&lt;/p&gt; &lt;p&gt;본문 시작전에 간단히 zum.com의 서버구조를 소개드리면, &lt;br /&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;/images/portal/post/2016-11-08-NGINX-CACHE-PROBLEM/줌닷컴구조.png&quot; alt=&quot;줌닷컴구조&quot; /&gt;&lt;/p&gt; &lt;p align=&quot;center&quot;&gt;(아주 간단하게 그린 줌닷컴 구조)&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; &lt;p&gt;L4를 Load Balancer로 사용하여 28대의 서버에 균등하게 요청을 분배하고 있습니다. &lt;br /&gt; 이때 각 서버는 Nginx와 Tomcat을 함께 가지고 있으며, Nginx를 &lt;strong&gt;리버스 프록시 서버&lt;/strong&gt;로 사용하고 있습니다. &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;리버스 프록시 서버란?&lt;/strong&gt; &lt;br /&gt; 일정 수준 이상의 규모를 가진...</description>
        <pubDate>Tue, 08 Nov 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/NGINX-CACHE-PROBLEM/</link>
        <guid isPermaLink="true">http://localhost:4000/NGINX-CACHE-PROBLEM/</guid>
        
        <category>server</category>
        
        <category>nginx</category>
        
        <category>cache</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>1년간 개발자 생활에 대한 생각 정리 ...</title>
        <description>&lt;h1 id=&quot;시작하며&quot;&gt;시작하며&lt;/h1&gt; &lt;p&gt;일요일 저녁 집에 왔는데 잠도 안오고 이런저런 생각을 하다 어느덧 진짜 개발자로서의 삶을 살기 시작한지 1년이 지났는데 그동안 나는 어떻게 살아왔는지 생각을하기 시작했고 글쓰는 걸 좋아하지 않지만 (그래서 공대생이 되었습니다…) 글을 남겨야 겠다는 생각이 들어 이렇게 글을 작성하고 있습니다.&lt;/p&gt; &lt;h3 id=&quot;어떻게-개발을-시작하게-되었나&quot;&gt;어떻게 개발을 시작하게 되었나&lt;/h3&gt; &lt;p&gt;뭐… 뻔한 이야기 겠지만 아버지의 영향이 컷습니다. 아버지 또한 대기업의 개발자셨고 개발자로서 커리어를 쌓아 개발팀을 관리하는 위치까지 꾀나 오랜시간 개발업무에 몸을 담아 오셨습니다. 자연스레 컴퓨터쪽 관련 학과로 대학교를 입학했고 점점 개발이 재밌어 졌고 개발자가 되기를 선택했습니다.&lt;/p&gt; &lt;h3 id=&quot;systemoutprinthello-web-developer&quot;&gt;System.out.print(“Hello Web Developer”);&lt;/h3&gt; &lt;p&gt;대학생활중 국가기관에서 주관하는 웹개발자 교육과정에 운좋게(?) 합격하게 되었고 약 2달간 웹개발을 배우게 되었습니다. 그때부터...</description>
        <pubDate>Wed, 26 Oct 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/talk_1/</link>
        <guid isPermaLink="true">http://localhost:4000/talk_1/</guid>
        
        <category>개발자</category>
        
        <category>zum</category>
        
        
        <category>portal/etc</category>
        
      </item>
    
      <item>
        <title>[포털개발팀-김영재] 파일럿 프로젝트</title>
        <description>&lt;h1 id=&quot;1-개요&quot;&gt;1. 개요&lt;/h1&gt; &lt;h3 id=&quot;저는&quot;&gt;저는…&lt;/h3&gt; &lt;p&gt;줌인터넷 포털개발팀에 입사한지 반년이 지난 새내기 개발자 김뉴비&lt;strong&gt;(뉴비 = 신입)&lt;/strong&gt;입니다. 이번에 줌블로그의 기념비적인 블로그 오픈에 힘입어 줌의 새내기들의 필수 통과 관문인 파일럿 프로젝트 글쓴이로 간택되었습니다. 2주 동안 &lt;strong&gt;제가 느끼고 경험한 것&lt;/strong&gt; 그리고 &lt;strong&gt;저희 팀에서 파일럿 프로젝트를 진행하는 목적(point)&lt;/strong&gt;을 서술해 보았습니다. 처음 작성하는 글이기에 부족한 점이 많지만 끝까지 읽어주시면 정말 기쁠것 같습니다.&lt;/p&gt; &lt;h4 id=&quot;파일럿-프로젝트란&quot;&gt;파일럿 프로젝트란??&lt;/h4&gt; &lt;p&gt;간단한 게시판을 만들어보는 프로젝트입니다. DB설계부터 개발, 마크업부분까지 오로지 혼자서 진행해야 합니다. 한 마디로 정의하자면 줌의 스파르타식 개발자 교육입니다. 교육은 2주간의 시간을 갖고 진행되며 이를 통해 신입의 역량을 면밀히 파악할 수 있습니다. 차후 코드리뷰로 마무리 짓게 됩니다. 이때는 각팀의 원하시는 개발자 선배분들이...</description>
        <pubDate>Wed, 26 Oct 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/ZUM-Pilot/</link>
        <guid isPermaLink="true">http://localhost:4000/ZUM-Pilot/</guid>
        
        <category>spring</category>
        
        <category>boot</category>
        
        <category>pilot</category>
        
        <category>zum</category>
        
        
        <category>portal/pilot</category>
        
      </item>
    
      <item>
        <title>Spring Boot로 TEAMUP(회사 메신져) BOT 만들기 - (2)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/portal/post/2016-10-17-TEAMUP-BOT-TIP//main.jpg&quot; alt=&quot;post_main&quot; /&gt;&lt;/p&gt; &lt;p&gt;이전 포스팅에서 기본적인 봇의 뼈대를 완성했다면, 이번 포스팅에서는 보다 체계적인 구조와 기능을 완성하기 위해 스프링에서 제공해주는 아래 기능들을 활용해보려고 합니다!&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Reflection&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;MVC의 Controller와 같이 봇에서 구현한 명령어의 Controller를 만들어 봅니다.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;AOP&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;구현된 명령어에 권한 설정을 해봅니다.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Scheduling&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;스케줄링을 활용하여 기능을 구현합니다.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;reflection&quot;&gt;&lt;strong&gt;Reflection&lt;/strong&gt;&lt;/h3&gt; &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Reflection&lt;/code&gt;이란 객체를 통해 클래스의 정보를 분석해 내는 프로그램 기법을 말합니다. 스프링이 아닌 자바의 특징으로 실행중인 자바프로그램 내부를 검사하고 내부의 속성을 수정할 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Spring Container&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;BeanFactory&lt;/code&gt;가 어플리케이션이 실행한 후 객체가 호출 될 당시 객체의 인스턴스를 생성하게 되는데 그 때...</description>
        <pubDate>Mon, 17 Oct 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/TEAMUP-BOT-TIP/</link>
        <guid isPermaLink="true">http://localhost:4000/TEAMUP-BOT-TIP/</guid>
        
        <category>springboot</category>
        
        <category>bot</category>
        
        <category>spring</category>
        
        <category>teamup</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>Spring Boot로 TEAMUP(회사 메신져) BOT 만들기 - (1)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/images/portal/post/2016-10-13-TEAMUP-BOT-START/main.jpg&quot; alt=&quot;post_main&quot; /&gt;&lt;/p&gt; &lt;p&gt;2016년 연초 줌인터넷에서는 2016년 전략이 발표되었습니다. &lt;br /&gt;그 중 눈을 의심하게 만드는 목표가 있었으니, 그것이 바로&lt;br /&gt;&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;잉여력 확보!?&lt;/code&gt;&lt;br /&gt; &lt;img src=&quot;/images/portal/post/2016-10-13-TEAMUP-BOT-START/yy.png&quot; alt=&quot;잉여력?&quot; /&gt;&lt;/p&gt; &lt;p&gt;이런 의미는 아니고, &lt;code class=&quot;highlighter-rouge&quot;&gt;더 높은 도약을 위해 개개인의 잉여 시간을 확보하여 업무를 더 효율적으로 하자는 의도!&lt;/code&gt; 그렇게 확보된 잉여력으로 무엇을 할까 고민하여 사내에서 사용하는 메신저 팀업의 봇을 만들게 되었습니다.&lt;/p&gt; &lt;h3 id=&quot;팀업이란&quot;&gt;팀업이란?&lt;/h3&gt; &lt;p&gt;이스트소프트의 기업용 메신저 &lt;a href=&quot;http://tmup.com&quot;&gt;팀업(TeamUP)&lt;/a&gt;은&lt;/p&gt; &lt;ul&gt; &lt;li&gt;사내 메신저&lt;/li&gt; &lt;li&gt;프로젝트별 그룹피드(게시판)&lt;/li&gt; &lt;li&gt;문서 등 자료 중앙관리&lt;/li&gt; &lt;li&gt;대용량 파일 전송&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;등 다양한 업무 도구를 제공해 빠른 커뮤니케이션(소통)을 통한 업무 효율을 향상시켜주는 기업용 통합 커뮤니케이션 플랫폼입니다.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;https://tmup.com/&quot;&gt;&lt;img src=&quot;/images/portal/post/2016-10-13-TEAMUP-BOT-START/teamup.jpg&quot; alt=&quot;팀업&quot; /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;자세한...</description>
        <pubDate>Thu, 13 Oct 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/TEAMUP-BOT-START/</link>
        <guid isPermaLink="true">http://localhost:4000/TEAMUP-BOT-START/</guid>
        
        <category>springboot</category>
        
        <category>bot</category>
        
        <category>spring</category>
        
        <category>teamup</category>
        
        
        <category>portal/tech</category>
        
      </item>
    
      <item>
        <title>포털개발팀 블로그에 첫 글을 남기면서</title>
        <description>&lt;p&gt;포털개발팀에서 기술블로그를 오픈하였습니다. 기술 정보들을 외부 개발자 분들과 소통하며 공유하기를 희망합니다.&lt;/p&gt; &lt;p&gt;앞으로 많은 관심 부탁드립니다.&lt;/p&gt; &lt;hr /&gt; &lt;h2 id=&quot;포털본부-포털개발팀&quot;&gt;포털본부 포털개발팀&lt;/h2&gt; &lt;p&gt;간단한 소개 먼저 하겠습니다. 저희 개발팀은 이스트소프트 자회사인 줌인터넷에서 포털서비스 및 서비스 플랫폼 신규 개발 및 운영 업무를 담당하고 있습니다.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;포털서비스&lt;/strong&gt; 를 개발/운영 하고 있습니다.&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;줌닷컴&lt;/strong&gt; &lt;img src=&quot;/images/portal/post/2016-10-12-first/zumcom.png&quot; alt=&quot;줌닷컴&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;뉴스줌&lt;/strong&gt; &lt;img src=&quot;/images/portal/post/2016-10-12-first/news.png&quot; alt=&quot;뉴스줌&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;허브줌&lt;/strong&gt; &lt;img src=&quot;/images/portal/post/2016-10-12-first/hub.png&quot; alt=&quot;허브줌&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;이글루스&lt;/strong&gt; &lt;img src=&quot;/images/portal/post/2016-10-12-first/egloos.png&quot; alt=&quot;이글루스&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;타임트리&lt;/strong&gt; &lt;img src=&quot;/images/portal/post/2016-10-12-first/timetree.png&quot; alt=&quot;타임트리&quot; /&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;포털서비스를 지탱해주는 &lt;strong&gt;포털서비스 플랫폼&lt;/strong&gt; 을 개발/운영 하고 있어요!!&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;광고&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;회원&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;기타 서비스 플랫폼 구축&lt;/strong&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;기타 업무&lt;/strong&gt;...</description>
        <pubDate>Wed, 12 Oct 2016 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/first/</link>
        <guid isPermaLink="true">http://localhost:4000/first/</guid>
        
        <category>개발자</category>
        
        <category>zum</category>
        
        
        <category>portal/etc</category>
        
      </item>
    
  </channel>
</rss>
